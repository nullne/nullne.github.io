<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>NULLNE</title><link href="/" rel="alternate"></link><link href="/feeds/nullne.atom.xml" rel="self"></link><id>/</id><updated>2014-11-11T11:11:00+08:00</updated><entry><title>ARP protocol analysis</title><link href="/web/2014/ARP-protocol.html" rel="alternate"></link><updated>2010-12-05T19:30:00+08:00</updated><author><name>nullne</name></author><id>tag:,2014-12-03:web/2014/ARP-protocol.html</id><summary type="html">&lt;h1&gt;ARP 协议分析&lt;/h1&gt;
&lt;p&gt;@[arp|wireshark]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;地址解析协议&lt;/strong&gt;，即&lt;strong&gt;ARP&lt;/strong&gt;（Address Resolution Protocol） 是根据IP地址获取物理地址的一个TCP/IP协议。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;工作过程&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;协议实战分析&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全威胁分析&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;工作流程&lt;/h3&gt;
&lt;p&gt;主机A的IP地址为192.168.1.1，MAC地址为0A-11-22-33-44-01；
主机B的IP地址为192.168.1.2，MAC地址为0A-11-22-33-44-02；
当主机A要与主机B通信时，地址解析协议可以将主机B的IP地址（192.168.1.2）解析成主机B的MAC地址，以下为工作流程：
1. 根据主机A上的路由表内容，IP确定用于访问主机B的转发IP地址是192.168.1.2。然后A主机在自己的本地ARP缓存中检查主机B的匹配MAC地址。
2. 如果主机A在ARP缓存中没有找到映射，它将询问192.168.1.2的硬件地址，从而将ARP请求帧广播到本地网络上的所有主机。源主机A的IP地址和MAC地址都包括在ARP请求中。本地网络上的每台主机都接收到ARP请求并且检查是否与自己的IP地址匹配。如果主机发现请求的IP地址与自己的IP地址不匹配，它将丢弃ARP请求。
3. 主机B确定ARP请求中的IP地址与自己的IP地址匹配，则将主机A的IP地址和MAC地址映射添加到本地ARP缓存中。
4. 主机B将包含其MAC地址的ARP回复消息直接发送回主机A。
5. 当主机A收到从主机B发来的ARP回复消息时，会用主机B的IP和MAC地址映射更新ARP缓存。本机缓存是有生存期的，生存期结束后，将再次重复上面的过程。主机B的MAC地址一旦确定，主机A就能向主机B发送IP通信了&lt;/p&gt;
&lt;h3&gt;协议实战分析&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;测试环境：windows
测试工具: cmd, wireshark&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;在&lt;code&gt;cmd&lt;/code&gt;中获取网关ip：10.3.17.1 &lt;img alt="Alt text" src="./QQ图片20141028221016.png" /&gt;&lt;/li&gt;
&lt;li&gt;配置&lt;code&gt;wireshap&lt;/code&gt;截取来自网关，即10.3.17.1的arp包，设置如下&lt;img alt="Alt text" src="./QQ图片20141028222301.png" /&gt;
获取到arp包后停止，见下图&lt;img alt="Alt text" src="./QQ图片20141028222312.jpg" /&gt;&lt;/li&gt;
&lt;li&gt;随机选择一个arp包（最后一个）进行分析&lt;img alt="Alt text" src="./QQ图片20141028222528.png" /&gt;&lt;/li&gt;
&lt;li&gt;arp包明确定义了Hardware type,Protocol type,Hardware size,Protocol size,Sender Mac  and IP address,Target Mac and IP address(从上面翻译后的内容可以清晰的看到)。&lt;/li&gt;
&lt;li&gt;ARP缓存会持续一段时间（一般为2分钟），之后又进行新一轮的更新。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;安全威胁分析&lt;/h3&gt;
&lt;p&gt;（因为模拟ARP攻击可能导致局域网内部出错，故此处只做理论分析）&lt;/p&gt;
&lt;h4&gt;ARP欺骗&lt;/h4&gt;
&lt;p&gt;ARP请求为广播形式发送的，网络上的主机可以自主发送ARP应答消息，并且当其他主机收到应答报文时不会检测该报文的真实性就将其记录在本地的MAC地址转换表，这样攻击者就可以向目标主机发送伪ARP应答报文，从而篡改本地的MAC地址表。 ARP欺骗可以导致目标计算机与网关通信失败，更会导致通信重定向，所有的数据都会通过攻击者的机器。
        最简单的攻击方式就是发送固定格式的ARP报文，类似于下面的格式：&lt;img alt="Alt text" src="./QQ图片20141028224008.png" /&gt;
已知被攻击者的ip以及mac地址（如果不知道可直接使用广播地址&lt;code&gt;FF.FF.FF.FF&lt;/code&gt;），将其自己的mac地址以及想截获的目标地址IP封装好发送，即能够刷新被欺骗主机的ARP缓存，从而得到本该发往另一个IP的所有包&lt;/p&gt;
&lt;h4&gt;ARP cache poisoning&lt;/h4&gt;</summary><category term="Arp"></category><category term="wireshark"></category></entry><entry><title>建站续，附乱七八糟</title><link href="/suo-sui/2014/build-and-remember-continued.html" rel="alternate"></link><updated>2014-11-11T11:11:00+08:00</updated><author><name>nullne</name></author><id>tag:,2014-11-11:suo-sui/2014/build-and-remember-continued.html</id><summary type="html">&lt;p&gt;&lt;em&gt;逛了一圈论坛博客神马的发现好多人也都在写点东西纪念今天&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;距离上一次写东西已经很久了，主要原因是因为Air跪了！幸灾乐祸的主儿可以去看看&lt;a href="http://weibo.com/2356978633/B7CNpb52w?type=comment#_rnd1415671779372"&gt;原微&lt;/a&gt;，那可是目前自己微博上最火的一个&lt;/p&gt;
&lt;p&gt;&lt;img alt="Alt text" src="http://ww2.sinaimg.cn/large/8c7ca3c9jw1eh3fj6ouc4j21kw23u1kx.jpg" title="=100*200" /&gt;&lt;/p&gt;
&lt;p&gt;应该说这是之前那篇文章的续吧，可惜那篇的&lt;code&gt;Markdown&lt;/code&gt;格式的已经弄没了，附上&lt;a href="nullne.com/archivi/abc.html"&gt;链接&lt;/a&gt;（估计也是唯一一个入口了）。当初心血来潮，也不完全心血来潮，算是小时候一个梦想吧，搞了这么一个极有技术含量的博客。现在看看当时还在初学者水平，只是简单的按照别人的教程做了下来。因为本儿跪了之后源代码也一并去了，所以一直都没有再更新，这一次重建博客，在之前的基础上新增加了很多东西，&lt;a href="https://travis-ci.org/"&gt;&lt;code&gt;Travis&lt;/code&gt;&lt;/a&gt;就是一个牛逼了的东西，待会儿我会接着把这一次的技术性细节一并简单介绍。&lt;/p&gt;
&lt;h3&gt;技术细节&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/"&gt;Travis CI&lt;/a&gt;
    &amp;gt;Travis CI is a hosted continuous integration service.
Travis CI's build environment provides different runtimes for different languages, for instance multiple versions of Ruby, PHP, Node.js. It also comes preinstalled with a variety of data stores and common tools like message brokers.&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;Pelican&lt;/code&gt;的常规思路是在本地写好&lt;code&gt;md&lt;/code&gt;或者其他格式的文件，然后&lt;code&gt;make publish&lt;/code&gt;，当然这是集成命令，分解开就是先生成静态页面然后PUSH到&lt;code&gt;Git page&lt;/code&gt;。看着似乎很简单，这是建立在首先配置好你的本地环境的基础上，并且每次换一台机器之后你都需要重新配置你的环境。配环境这事儿我只能呵呵了，那么多的的平台配法儿都不太一样。&lt;/p&gt;
&lt;p&gt;但是，当你遇到&lt;code&gt;Travis CI&lt;/code&gt;一切就都不一样了。你只要一次性配置完成，将你的source文件PUSH到某一个github仓库。之后的事情就容易多了，按最坏的情况来说，你的本撒手人寰了（哭瞎），你写了一篇文章纪念。以最快的额速度把舍友的本儿扯过来.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git clone git://github.com/username/bri.github.io-source
mv remember.md path/to/content/
git add *
git commit -m &lt;span class="s2"&gt;&amp;quot;love you forever&amp;quot;&lt;/span&gt;
git push
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Done! 你的本儿在天之灵，看到以后应该就会安息了。&lt;/p&gt;
&lt;p&gt;废话不说了，按照&lt;a href="http://zonca.github.io"&gt;Zonca&lt;/a&gt;的&lt;a href="http://zonca.github.io/2013/09/automatically-build-pelican-and-publish-to-github-pages.html"&gt;教程&lt;/a&gt;一步一步下来基本没有错误，但是当时我走了很多弯路，自作聪明的改了一些脚本。如果遇到什么问题欢迎讨论。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.tipue.com/"&gt;Tipue&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Tipue Search is a site search engine jQuery plugin. It's free, open source and responsive.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;还是跟上面一样，按照&lt;a href="http://moparx.com"&gt;Moparx&lt;/a&gt;的&lt;a href="http://moparx.com/2014/04/adding-search-capabilities-within-your-pelican-powered-site-using-tipue-search/"&gt;教程&lt;/a&gt;走吧。&lt;/p&gt;
&lt;p&gt;还有很多其他插件，像&lt;code&gt;Sitemap&lt;/code&gt;什么的，之所以单独把这个列在这儿是因为发现原来静态页面也是可以交互的，它提供了一个思路。简单说就是将所有的网站页面存储到一个&lt;code&gt;JSON&lt;/code&gt;文件，然后在搜索页面直接加载这个文件在本地搜索,非常快速。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;都说是纪念了&lt;/h3&gt;
&lt;p&gt;高大上的&lt;em&gt;APEC&lt;/em&gt;假期马上就结束了，按照大四之前的性子，至少半个月前已经在他乡了，异国不敢说，但是已经开始筹划了，护照就是第一步。六天的假期在我这儿怎么也得有半个月。最近却怂怂的呆在学校哪儿也不敢去。&lt;/p&gt;
&lt;p&gt;反正就是没有找到工作。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;好的工作&lt;/em&gt;应该是什么样子的，我想了很多遍，从最开始投的第一家说起吧。&lt;/p&gt;
&lt;p&gt;阿里巴巴，以网上笔试结果&lt;strong&gt;诚信第一&lt;/strong&gt;终结了我。当时第一次参加网上笔试，幸灾乐祸的跟队友共同战斗以望能够从人海中脱颖而出。至于诚信什么的以后再说吧，大学之后关于这个的定义改变了很多。百度两次笔试无果，腾讯没有投递。BAT梦石沉大海，系统关照我有选择困难症。这之前我一直以为找份BAT的工作很容易，这之后我才去想一些事情。&lt;/p&gt;
&lt;p&gt;。。。。。。&lt;/p&gt;
&lt;p&gt;算了先就不无病呻吟了，刚才接到&lt;strong&gt;知道创宇&lt;/strong&gt;HR的电话，在这么一个特殊的节日去面试。&lt;/p&gt;
&lt;p&gt;最后附图纪念 &lt;strong&gt;&lt;em&gt;1111&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Alt text" src="https://lh5.googleusercontent.com/-foXL3QCuRco/VGDh3Wvvy8I/AAAAAAAAADg/iwtexzazuGg/s481/yule.jpg" /&gt;&lt;/p&gt;</summary><category term="找工作"></category><category term="blog"></category></entry></feed>